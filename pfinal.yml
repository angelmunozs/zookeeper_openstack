heat_template_version: 2017-02-24

description: Escenario de la practica final

parameters:

  database_password:
    type: string
    label: Database Password
    description: Password to be used for database
    hidden: true
    constraints:
      - length: { min: 6, max: 8 }
        description: Password length must be between 6 and 8 characters.
      - allowed_pattern: "[a-zA-Z0-9]+"
        description: Password must consist of characters and numbers only.
      - allowed_pattern: "[A-Z]+[a-zA-Z0-9]*"
        description: Password must start with an uppercase character.

  config_file:
    type: string
    description: The contents of the file /tmp/zoookeeper_openstack/server_config for server configurations.

resources:

  ############################################################################################################
  ############################################# Create Key-Pairs. ############################################
  ############################################################################################################

  keypair1:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: keypair1

  keypair2:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: keypair2

  keypair3:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: keypair3

  keypair4:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: keypair4


  ############################################################################################################
  ############################################## Create Networks. ############################################
  ############################################################################################################
  net1:
        type: OS::Neutron::Net
        properties:
          name: net1

  net2:
        type: OS::Neutron::Net
        properties:
          name: net2

  subnet1:
        type: OS::Neutron::Subnet
        properties:
          name: subnet1
          network_id: { get_resource: net1 }
          gateway_ip: 10.1.1.1
          dns_nameservers: [8.8.8.8]
          cidr: 10.1.1.0/24
          allocation_pools:
            - start: 10.1.1.8
              end: 10.1.1.100

  subnet2:
        type: OS::Neutron::Subnet
        properties:
          name: subnet2
          network_id: { get_resource: net2 }
          gateway_ip: 10.1.2.1
          dns_nameservers: [8.8.8.8]
          cidr: 10.1.2.0/24
          allocation_pools:
            - start: 10.1.2.8
              end: 10.1.2.100


  # openstack network create --share --external --provider-physical-network provider --provider-network-type flat ExtNet
  ExtNet:
    type: OS::Neutron::Net
    properties:
      name: ExtNet
      shared: True

  ExtSubNet:
        type: OS::Neutron::Subnet
        properties:
          name: ExtSubNet
          network_id: { get_resource: ExtNet }
          gateway_ip: 10.0.10.1
          dns_nameservers: [10.0.10.1]
          cidr: 10.0.10.0/24
          allocation_pools:
            - start: 10.0.10.100
              end: 10.0.10.200        


  ############################################################################################################
  ############################################### Create Router. #############################################
  ############################################################################################################

  router:
    type: OS::Neutron::Router
    properties:
      name: r
      external_gateway_info:
        network: ExtNet

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet1 }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet2 }


  ############################################################################################################
  ############################################## Create Servers. #############################################
  ############################################################################################################

  ########################################################################################################################################
  # Tema CLOUD-INIT -- MIRAR: https://docs.openstack.org/heat/pike/template_guide/openstack.html#OS::Nova::Server-prop-user_data
  #                           https://docs.openstack.org/heat/latest/template_guide/software_deployment.html#software-config-resources
  ########################################################################################################################################


  boot_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /tmp/CNVR/zoookeeper_openstack
          content: {get_param: config_file}


  ############################################################################################################
  ################################################## Modificar ###############################################
  ############################################################################################################
  vms_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
  ############################################################################################################
  ############################################################################################################
  ############################################################################################################


  vm1:
   type: OS::Nova::Server
   properties:
    name: vm1
    key_name: { get_resource: keypair1 }
    image: xenial-server-cloudimg-amd64-vnx
    flavor: m1.tiny
    user_data_format: SOFTWARE_CONFIG
    user_data: {get_resource: boot_config}
    networks:
     - network: { get_resource: net1 }
    
  vm2:
   type: OS::Nova::Server
   properties:
    name: vm2
    key_name: { get_resource: keypair2 }
    image: xenial-server-cloudimg-amd64-vnx
    flavor: m1.tiny
    user_data_format: SOFTWARE_CONFIG
    user_data: {get_resource: boot_config}
    networks:
     - network: { get_resource: net1 }

  vm3:
   type: OS::Nova::Server
   properties:
    name: vm3
    key_name: { get_resource: keypair3 }
    image: xenial-server-cloudimg-amd64-vnx
    flavor: m1.tiny
    user_data_format: SOFTWARE_CONFIG
    user_data: {get_resource: boot_config}
    networks:
     - network: { get_resource: net1 }


  ############################################################################################################
  ########################################### Create Admin Server. ###########################################
  ############################################################################################################

  vm_admin_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net1 }
      fixed_ips:
        - subnet_id: { get_resource: subnet1 }
      security_groups: [{ get_resource: vms_security_group }]

  server_floating_ip:
    type: OS::Neutron::FloatingIP
    depends_on: server_port
    properties:
      floating_network_id: { get_resource: net1 }
      port_id: { get_resource: vm_admin_port }

  vm_admin:
   type: OS::Nova::Server
   properties:
    name: vm_admin
    key_name: { get_resource: keypair4 }
    image: xenial-server-cloudimg-amd64-vnx
    flavor: m1.tiny
    networks:
     - port: { get_resource: vm_admin_port }


  ############################################################################################################
  ########################################### Create Load Balancer. ##########################################
  ############################################################################################################

  # https://github.com/openstack/heat-templates/blob/master/hot/lbaasv2/lb_group.yaml


  ############################################################################################################
  ########################################### Create MySQL Server. ###########################################
  ############################################################################################################ 

  # https://github.com/openstack/heat-templates/blob/master/hot/Windows/MSSQLServer/MSSQL.yaml


############################################################################################################
################################################## Outputs. ################################################
############################################################################################################

outputs:
  vm1_outputs:
    description: The IP address and instance name of the VM1 instance
    value: { get_attr: [vm1, first_address, name] }
  vm2_outputs:
    description: The IP address and instance name of the VM1 instance
    value: { get_attr: [vm2, first_address, name] }
  vm3_outputs:
    description: The IP address and instance name of the VM1 instance
    value: { get_attr: [vm3, first_address, name] }       


